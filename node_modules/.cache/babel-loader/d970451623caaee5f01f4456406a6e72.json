{"ast":null,"code":"var _jsxFileName = \"/Users/zico/Documents/wheather app/weather-app-web-ZicoRazzi/src/components/CurrentWeather.js\",\n    _s = $RefreshSig$();\n\nimport CurrentWeatherStyles from \"./CurrentWeatherStyles\";\nimport dateBuilder from \"./DateBuilder\";\nimport React, { useState, useEffect } from \"react\";\nimport { API_KEY, API_BASE_URL } from \"../apis/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentWeather(_ref) {\n  _s();\n\n  let {\n    weatherDetails,\n    setWeatherDetails\n  } = _ref;\n  const [query, setQuery] = useState();\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [weatherActive, setWeatherActive] = useState(false);\n\n  const handleSearch = evt => {\n    if (evt.key !== \"Enter\") return;\n    setQuery(input);\n  }; // useEffect(() => {\n  //   if (!query) return;\n  //   fetch(`${API_BASE_URL}weather?q=${query}&units=metric&APPID=${API_KEY}`)\n  //     .then((res) => res.json())\n  //     .then((result) => {\n  //       setWeather(result);\n  //       setWeatherActive(true);\n  //     })\n  //     .catch((error) => console.log(error));\n  //     if (query.status !== 200 ) {\n  //       setError(true)\n  //       setErrorMessage(`${query.status} ERROR: City: ${query} ${query.statusText}`)\n  //       console.log('ERROR', errorMessage)\n  //       return\n  //     }\n  // }, [query]);\n  //ASYNC\n  //\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}weather?q=${query}&units=metric&APPID=${API_KEY}`);\n        console.log(\"RESPONSE DATA\", response);\n\n        if (response.status === 404) {\n          const errorCode = `City: ${query} ${response.statusText}`;\n          setError(true);\n          setErrorMessage(errorCode);\n          console.log(\"ERROR\", errorCode);\n          return;\n        }\n\n        const data = await response.json();\n        console.log(\"RESPONSE JSON DATA\", data);\n        setWeather(data);\n        setError(false);\n        setWeatherActive(true);\n      } catch (error) {}\n    };\n\n    if (query) fetchData();\n  }, [query]);\n  useEffect(() => {\n    if (!weatherActive) return;\n\n    const getWeeklyWeather = async () => {\n      const lat = weather.coord.lat;\n      const lon = weather.coord.lon;\n\n      try {\n        const response = await fetch(`${API_BASE_URL}onecall?lat=${lat}&lon=${lon}&exclude=${`minutely,hourly,alerts`}&appid=${API_KEY}`);\n        const result = await response.json();\n        setWeatherDetails(result);\n        setWeatherActive(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getWeeklyWeather();\n  }, [weatherActive]);\n  return /*#__PURE__*/_jsxDEV(CurrentWeatherStyles, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: (weather === null || weather === void 0 ? void 0 : weather.main.temp) > 16 ? \"weather_container warm\" : \"weather_container\" // typeof weather.main != \"undefined\"\n      //   ? weather.main.temp > 16\n      //     ? \"weather_container warm\"\n      //     : \"weather_container\"\n      //   : \"weather_container\"\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search_bar\",\n        placeholder: \"Search...\",\n        onChange: e => setInput(e.target.value),\n        value: input,\n        onKeyPress: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error_message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location\",\n              children: [weather.name, \", \", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [Math.round(weather.main.temp), \"\\xB0c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp_min\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Min temp: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), Math.round(weather.main.temp_min), \"\\xB0c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp_max\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Max temp: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), Math.round(weather.main.temp_max), \"\\xB0c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"humidity\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Humidity: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), weather.main.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather\",\n              children: weather.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentWeather, \"rpAyz0lUwzAWmgIWsZA8DOLKLzY=\");\n\n_c = CurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"sources":["/Users/zico/Documents/wheather app/weather-app-web-ZicoRazzi/src/components/CurrentWeather.js"],"names":["CurrentWeatherStyles","dateBuilder","React","useState","useEffect","API_KEY","API_BASE_URL","CurrentWeather","weatherDetails","setWeatherDetails","query","setQuery","input","setInput","error","setError","errorMessage","setErrorMessage","weather","setWeather","weatherActive","setWeatherActive","handleSearch","evt","key","fetchData","response","fetch","console","log","status","errorCode","statusText","data","json","getWeeklyWeather","lat","coord","lon","result","main","temp","e","target","value","name","sys","country","Date","Math","round","temp_min","temp_max","humidity","icon"],"mappings":"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","sourcesContent":["import CurrentWeatherStyles from \"./CurrentWeatherStyles\";\nimport dateBuilder from \"./DateBuilder\";\nimport React, { useState, useEffect } from \"react\";\nimport { API_KEY, API_BASE_URL } from \"../apis/config\";\n\nexport default function CurrentWeather({ weatherDetails, setWeatherDetails }) {\n  const [query, setQuery] = useState();\n  const [input, setInput] = useState(\"\");\n\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [weather, setWeather] = useState({});\n  const [weatherActive, setWeatherActive] = useState(false);\n\n  const handleSearch = (evt) => {\n    if (evt.key !== \"Enter\") return;\n    setQuery(input);\n  };\n\n  // useEffect(() => {\n  //   if (!query) return;\n\n  //   fetch(`${API_BASE_URL}weather?q=${query}&units=metric&APPID=${API_KEY}`)\n  //     .then((res) => res.json())\n  //     .then((result) => {\n  //       setWeather(result);\n  //       setWeatherActive(true);\n  //     })\n  //     .catch((error) => console.log(error));\n\n  //     if (query.status !== 200 ) {\n  //       setError(true)\n  //       setErrorMessage(`${query.status} ERROR: City: ${query} ${query.statusText}`)\n  //       console.log('ERROR', errorMessage)\n  //       return\n  //     }\n  // }, [query]);\n\n  //ASYNC\n  //\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          `${API_BASE_URL}weather?q=${query}&units=metric&APPID=${API_KEY}`\n        );\n        console.log(\"RESPONSE DATA\", response);\n\n        if (response.status === 404) {\n          const errorCode = `City: ${query} ${response.statusText}`;\n          setError(true);\n          setErrorMessage(errorCode);\n          console.log(\"ERROR\", errorCode);\n          return;\n        }\n\n        const data = await response.json();\n        console.log(\"RESPONSE JSON DATA\", data);\n        setWeather(data);\n        setError(false)\n        setWeatherActive(true);\n      } catch (error) {}\n    };\n    if (query) fetchData();\n  }, [query]);\n\n  useEffect(() => {\n    if (!weatherActive) return;\n\n    const getWeeklyWeather = async () => {\n      const lat = weather.coord.lat;\n      const lon = weather.coord.lon;\n\n      try {\n        const response = await fetch(\n          `${API_BASE_URL}onecall?lat=${lat}&lon=${lon}&exclude=${`minutely,hourly,alerts`}&appid=${API_KEY}`\n        );\n        const result = await response.json();\n        setWeatherDetails(result);\n        setWeatherActive(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getWeeklyWeather();\n  }, [weatherActive]);\n\n  return (\n    <CurrentWeatherStyles>\n      <div\n        className={\n          weather?.main.temp > 16 ? \"weather_container warm\" : \"weather_container\"\n          // typeof weather.main != \"undefined\"\n          //   ? weather.main.temp > 16\n          //     ? \"weather_container warm\"\n          //     : \"weather_container\"\n          //   : \"weather_container\"\n        }\n      >\n        <input\n          type=\"text\"\n          className=\"search_bar\"\n          placeholder=\"Search...\"\n          onChange={(e) => setInput(e.target.value)}\n          value={input}\n          onKeyPress={handleSearch}\n        />\n        {error ? (\n          <div className=\"error_message\">{errorMessage}</div>\n        ) : (\n          <React.Fragment>\n          \n            {typeof weather.main != \"undefined\" ? (\n              <div>\n                <div className=\"location_box\">\n                  <div className=\"location\">\n                    {weather.name}, {weather.sys.country}\n                  </div>\n                  <div className=\"date\">{dateBuilder(new Date())}</div>\n                </div>\n                <div className=\"weather_box\">\n                  <div className=\"temp\">{Math.round(weather.main.temp)}°c</div>\n                  <div className=\"temp_min\">\n                    <span>Min temp: </span>\n                    {Math.round(weather.main.temp_min)}°c\n                  </div>\n                  <div className=\"temp_max\">\n                    <span>Max temp: </span>\n                    {Math.round(weather.main.temp_max)}°c\n                  </div>\n                  <div className=\"humidity\">\n                    <span>Humidity: </span>\n                    {weather.main.humidity}%\n                  </div>\n                  <img\n                    src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n                    alt=\"\"\n                  />\n                  <div className=\"weather\">{weather.weather[0].main}</div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            \n          </React.Fragment>\n        )}\n      </div>\n    </CurrentWeatherStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}