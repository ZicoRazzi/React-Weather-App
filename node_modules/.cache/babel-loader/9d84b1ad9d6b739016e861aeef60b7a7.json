{"ast":null,"code":"var _jsxFileName = \"/Users/zico/Documents/wheather app/weather-app-web-ZicoRazzi/src/components/Weather.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport WeatherStyles from './WeatherStyles';\nimport dateBuilder from './DateBuilder';\nimport ReactCardFlip from 'react-card-flip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"f8a3239850db33a6d8c80fa6a1e5236e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nexport default function Weather() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [query, setQuery] = useState();\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery(\"\");\n        console.log(result);\n      });\n    }\n  };\n\n  const ReactCardFlip = () => {\n    _s();\n\n    const [isFlipped, setIsFlipped] = useState(false);\n\n    const handleClick = () => {\n      setIsFlipped(!isFlipped);\n    };\n  };\n\n  _s(ReactCardFlip, \"9NPh+N5IPOCpZ+AUtVyw7TZ32I8=\");\n\n  return /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n    children: /*#__PURE__*/_jsxDEV(WeatherStyles, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: typeof weather.main != \"undefined\" ? weather.main.temp > 16 ? \"search_box warm\" : \"search_box\" : \"search_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search_bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location\",\n              children: [weather.name, \", \", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [Math.round(weather.main.temp), \"\\xB0c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp_min\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Min temp: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), Math.round(weather.main.temp_min)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp_max\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Max temp: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), Math.round(weather.main.temp_max)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"humidity\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Humidity: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), weather.main.humidity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather\",\n              children: weather.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClick,\n              children: \"Click to flip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Weather, \"p4oKCMDnFZDfyF0PDp/ypSv5j+Y=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/zico/Documents/wheather app/weather-app-web-ZicoRazzi/src/components/Weather.js"],"names":["React","useState","WeatherStyles","dateBuilder","ReactCardFlip","api","key","base","Weather","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","isFlipped","setIsFlipped","handleClick","main","temp","e","target","value","name","sys","country","Date","Math","round","temp_min","temp_max","humidity","icon"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport WeatherStyles from './WeatherStyles'\nimport dateBuilder from './DateBuilder'\nimport ReactCardFlip from 'react-card-flip'\n\nconst api = {\n  key: \"f8a3239850db33a6d8c80fa6a1e5236e\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nexport default function Weather() {\n  const [query, setQuery] = useState();\n  const [weather, setWeather] = useState({});\n\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          console.log(result);\n        });\n    }\n  };\n\n  const ReactCardFlip = () => {\n    const[isFlipped, setIsFlipped] = useState(false)\n    \n    const handleClick = () => {\n      setIsFlipped(!isFlipped)\n    }\n  }\n  return (\n  <ReactCardFlip>\n    <WeatherStyles>\n      <div\n        className={\n          typeof weather.main != \"undefined\"\n            ? weather.main.temp > 16\n              ? \"search_box warm\"\n              : \"search_box\"\n            : \"search_box\"\n        }\n      >\n        <input\n          type=\"text\"\n          className=\"search_bar\"\n          placeholder=\"Search...\"\n          onChange={(e) => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n        />\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location_box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather_box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}°c</div>\n              <div className=\"temp_min\">\n                <span>Min temp: </span>\n                {Math.round(weather.main.temp_min)}\n              </div>\n              <div className=\"temp_max\">\n                <span>Max temp: </span>\n                {Math.round(weather.main.temp_max)}\n              </div>\n              <div className=\"humidity\">\n                <span>Humidity: </span>\n                {weather.main.humidity}\n              </div>\n              <img \n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} \n              alt=\"\" /> \n              <div className=\"weather\">{weather.weather[0].main}</div>\n             <button onClick={handleClick}>Click to flip</button>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </WeatherStyles>\n    </ReactCardFlip>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}