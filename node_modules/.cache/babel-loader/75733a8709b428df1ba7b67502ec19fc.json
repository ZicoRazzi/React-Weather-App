{"ast":null,"code":"var _jsxFileName = \"/Users/zico/Documents/wheather app/weather-app-web-ZicoRazzi/src/components/WeeklyWeather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CurrentWeatherStyles from \"./CurrentWeatherStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"f8a3239850db33a6d8c80fa6a1e5236e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nexport default function WeeklyWeather() {\n  _s();\n\n  const [weatherDetails, setWeatherDetails] = useState({});\n  const [weatherActive, setWeatherActive] = useState(false);\n  const [weather, setWeather] = useState({});\n  useEffect(() => {\n    if (!weatherActive) return;\n    console.log(\"WEATHER\", weather);\n    const lat = weather.coord.lat;\n    const lon = weather.coord.lon;\n    console.log(\"lat\", lat);\n    console.log(\"lon\", lon);\n    fetch(`${api.base}onecall?lat=${lat}&lon=${lon}&exclude=${`minutely,hourly,alerts`}&appid=${api.key}`).then(res => res.json()).then(result => {\n      console.log(\"RESULT\", result);\n      setWeatherDetails(result);\n    }).catch(error => console.log(error));\n  }, [weather, weatherActive]); // const [clicked, setClicked] = useState(null);\n  //   const toggle = i => {\n  //       if (clicked === i){\n  //           return setClicked(null)\n  //       }\n  //       setClicked(i)\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(CurrentWeatherStyles, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-wrapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeeklyWeather, \"i3Iw/UtoQEmn8+PxB8lLk05WGIY=\");\n\n_c = WeeklyWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeeklyWeather\");","map":{"version":3,"sources":["/Users/zico/Documents/wheather app/weather-app-web-ZicoRazzi/src/components/WeeklyWeather.js"],"names":["React","useState","useEffect","CurrentWeatherStyles","api","key","base","WeeklyWeather","weatherDetails","setWeatherDetails","weatherActive","setWeatherActive","weather","setWeather","console","log","lat","coord","lon","fetch","then","res","json","result","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;AAKA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,aAAL,EAAoB;AAEpBI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AACA,UAAMI,GAAG,GAAGJ,OAAO,CAACK,KAAR,CAAcD,GAA1B;AACA,UAAME,GAAG,GAAGN,OAAO,CAACK,KAAR,CAAcC,GAA1B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,GAAnB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,GAAnB;AACAC,IAAAA,KAAK,CACF,GACCf,GAAG,CAACE,IACL,eAAcU,GAAI,QAAOE,GAAI,YAAY,wBAAwB,UAChEd,GAAG,CAACC,GACL,EALE,CAAL,CAOGe,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,MAAD,IAAY;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBQ,MAAtB;AACAd,MAAAA,iBAAiB,CAACc,MAAD,CAAjB;AACD,KAXH,EAaGC,KAbH,CAaUC,KAAD,IAAWX,OAAO,CAACC,GAAR,CAAYU,KAAZ,CAbpB;AAcD,GAtBQ,EAsBN,CAACb,OAAD,EAAUF,aAAV,CAtBM,CAAT,CALsC,CA6BtC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE,QAAC,oBAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GA3EuBH,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport CurrentWeatherStyles from \"./CurrentWeatherStyles\";\n\nconst api = {\n  key: \"f8a3239850db33a6d8c80fa6a1e5236e\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nexport default function WeeklyWeather() {\n  const [weatherDetails, setWeatherDetails] = useState({});\n  const [weatherActive, setWeatherActive] = useState(false);\n  const [weather, setWeather] = useState({});\n\n  useEffect(() => {\n    if (!weatherActive) return;\n\n    console.log(\"WEATHER\", weather);\n    const lat = weather.coord.lat;\n    const lon = weather.coord.lon;\n    console.log(\"lat\", lat);\n    console.log(\"lon\", lon);\n    fetch(\n      `${\n        api.base\n      }onecall?lat=${lat}&lon=${lon}&exclude=${`minutely,hourly,alerts`}&appid=${\n        api.key\n      }`\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(\"RESULT\", result);\n        setWeatherDetails(result);\n      })\n\n      .catch((error) => console.log(error));\n  }, [weather, weatherActive]);\n\n  // const [clicked, setClicked] = useState(null);\n  //   const toggle = i => {\n  //       if (clicked === i){\n  //           return setClicked(null)\n  //       }\n  //       setClicked(i)\n  //   }\n  return (\n    <CurrentWeatherStyles>\n      <div className=\"weather_container\">\n      <div className=\"accordion-wrapper\">\n                {/* {dailyArray.map((item, i) => (\n                    <div className=\"accordion-item\">\n                        <div className=\"accordion-title\" onClick={() => toggle(i) }>\n                            <p><DateConverter index={item} /></p>\n                            <p>{convertDate(item.dt)}</p>\n                            <p><IconConverter iconId={item.weather[0].id} /></p>\n                            <p><span>{item.temp.min.toFixed(0)}/{item.temp.max.toFixed(0)}°C</span></p>\n                            <p>{clicked === i ? \"-\" : \"+\" }</p>\n                        </div>\n                        <div className={clicked === i ? \"accordion-content open\" : \"accordion-content\"}>\n                            <table className=\"accordion-table\">\n                            <tbody>\n                                <tr>\n                                    <th></th>\n                                    <th>Ochtend</th>\n                                    <th>Middag</th>\n                                    <th>Avond</th>\n                                    <th>Nacht</th>\n                                </tr>\n                                <tr>\n                                    <td>Temp</td>\n                                    <td>{item.temp.morn.toFixed(1)}°C</td>\n                                    <td>{item.temp.day.toFixed(1)}°C</td>\n                                    <td>{item.temp.eve.toFixed(1)}°C</td>\n                                    <td>{item.temp.night.toFixed(1)}°C</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                ))} */}\n                </div>\n      </div>\n    </CurrentWeatherStyles>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}