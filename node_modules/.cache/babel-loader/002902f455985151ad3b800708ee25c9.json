{"ast":null,"code":"var _jsxFileName = \"/Users/zico/Documents/wheather app/weather-app-web-ZicoRazzi/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Warm from '../assets/images/warm-bg.jpg';\nimport Cold from '../assets/images/cold-bg.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherStyles = styled.div`\n  \n  .search_box{\n    width: 400px;\n    height: 600px;\n    border-radius: 20px;\n    background-image: url(${Cold});\n    background-size: cover;\n    background-position: bottom;\n    transition: .3s ease-out;\n    padding: 25px;\n  }\n  .search_box.warm{\n    background-image: url(${Warm})\n  }\n  .search_bar{\n    width: 100%;\n    display: block;\n    padding: 20px;\n    \n    appearance: none;\n    background: none;\n    border: none;\n    outline: none;\n\n    background-color: rgba(255, 255, 255, 0.5);\n    box-shadow: 0px 5px rgba(0, 0, 0, 0.2);\n    border-radius: 15px;\n\n    margin: 0 auto;\n\n    color: #313131;\n    font-size: 20px;\n\n    transition: .4s ease;\n  }\n  .search_bar:focus{\n    background-color: rgba(255, 255, 255, 0.75);\n  }\n  .location{\n    color: #fff;\n    margin: 20px auto;\n    font-size: 34px;\n    font-weight: 500;\n    text-align: center;\n    text-shadow: 2px 2px rgba(50, 50, 70, 0.5);\n    font-family: \"Montserrat SemiBold\";\n\n  }\n  .date, span, .temp_min, .temp_max, .humidity{\n    color:#fff;\n    font-size: 24px;\n    font-weight: 300;\n    font-style: italic;\n    text-align: center;\n    text-shadow: 2px 2px rgba(50, 50, 70, 0.5);\n  }\n  .weather_box{\n    text-align: center;\n  }\n  .temp{\n    position: relative;\n    display: inline-block;\n    margin: 30px auto;\n    background-color: rgba(255, 255, 255, 0.2);\n    padding: 16px;\n    color: #fff;\n    font-size: 102px;\n    font-weight: 900;\n\n    text-shadow: 2px 4px rgba(50, 50, 70, 0.5);\n    text-align: center;\n    box-shadow: 3px 6-x rgba(0, 0, 0, 0.2);\n  }\n  .weather{\n    color: #fff;\n    font-size: 48px;\n    font-weight: 700;\n    text-shadow: 3px 3px rgba(50, 50, 70, 0.5);\n  }\n`;\n_c = WeatherStyles;\nconst api = {\n  key: 'f8a3239850db33a6d8c80fa6a1e5236e',\n  base: 'https://api.openweathermap.org/data/2.5/'\n};\nexport default function Weather() {\n  _s();\n\n  const [query, setQuery] = useState();\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const iconurl = 'http://openweathermap.org/img/wn/' + `${weather.weather[0].icon}` + '.png';\n  console.log(iconurl);\n\n  const dateBuilder = d => {\n    let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(WeatherStyles, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: typeof weather.main != \"undefined\" ? weather.main.temp > 16 ? 'search_box warm' : 'search_box' : 'search_box',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search_bar\",\n        placeholder: \"Search...\",\n        onChange: e => setQuery(e.target.value),\n        value: query,\n        onKeyPress: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0c\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp_min\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Min: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this), Math.round(weather.main.temp_min)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp_max\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Max: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this), Math.round(weather.main.temp_max)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"humidity\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Humidity: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this), weather.main.humidity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: iconurl,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"p4oKCMDnFZDfyF0PDp/ypSv5j+Y=\");\n\n_c2 = Weather;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WeatherStyles\");\n$RefreshReg$(_c2, \"Weather\");","map":{"version":3,"sources":["/Users/zico/Documents/wheather app/weather-app-web-ZicoRazzi/src/components/Weather.js"],"names":["React","useState","styled","Warm","Cold","WeatherStyles","div","api","key","base","Weather","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","iconurl","icon","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round","temp_min","temp_max","humidity"],"mappings":"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","sourcesContent":["import React, { useState }from \"react\";\nimport styled from \"styled-components\";\nimport Warm from '../assets/images/warm-bg.jpg';\nimport Cold from '../assets/images/cold-bg.jpg'\n\nconst WeatherStyles = styled.div`\n  \n  .search_box{\n    width: 400px;\n    height: 600px;\n    border-radius: 20px;\n    background-image: url(${Cold});\n    background-size: cover;\n    background-position: bottom;\n    transition: .3s ease-out;\n    padding: 25px;\n  }\n  .search_box.warm{\n    background-image: url(${Warm})\n  }\n  .search_bar{\n    width: 100%;\n    display: block;\n    padding: 20px;\n    \n    appearance: none;\n    background: none;\n    border: none;\n    outline: none;\n\n    background-color: rgba(255, 255, 255, 0.5);\n    box-shadow: 0px 5px rgba(0, 0, 0, 0.2);\n    border-radius: 15px;\n\n    margin: 0 auto;\n\n    color: #313131;\n    font-size: 20px;\n\n    transition: .4s ease;\n  }\n  .search_bar:focus{\n    background-color: rgba(255, 255, 255, 0.75);\n  }\n  .location{\n    color: #fff;\n    margin: 20px auto;\n    font-size: 34px;\n    font-weight: 500;\n    text-align: center;\n    text-shadow: 2px 2px rgba(50, 50, 70, 0.5);\n    font-family: \"Montserrat SemiBold\";\n\n  }\n  .date, span, .temp_min, .temp_max, .humidity{\n    color:#fff;\n    font-size: 24px;\n    font-weight: 300;\n    font-style: italic;\n    text-align: center;\n    text-shadow: 2px 2px rgba(50, 50, 70, 0.5);\n  }\n  .weather_box{\n    text-align: center;\n  }\n  .temp{\n    position: relative;\n    display: inline-block;\n    margin: 30px auto;\n    background-color: rgba(255, 255, 255, 0.2);\n    padding: 16px;\n    color: #fff;\n    font-size: 102px;\n    font-weight: 900;\n\n    text-shadow: 2px 4px rgba(50, 50, 70, 0.5);\n    text-align: center;\n    box-shadow: 3px 6-x rgba(0, 0, 0, 0.2);\n  }\n  .weather{\n    color: #fff;\n    font-size: 48px;\n    font-weight: 700;\n    text-shadow: 3px 3px rgba(50, 50, 70, 0.5);\n  }\n`;\n\nconst api = {\n  key: 'f8a3239850db33a6d8c80fa6a1e5236e',\n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\nexport default function Weather() {\n\n  const [query, setQuery] = useState()\n  const [weather, setWeather] = useState({})\n\n  const search = evt => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n          .then(res => res.json())\n          .then(result => {\n            setWeather(result)\n            setQuery('')\n            console.log(result)\n          })\n    }\n  }\n  const iconurl = 'http://openweathermap.org/img/wn/' + `${weather.weather[0].icon}` + '.png'\nconsole.log(iconurl)\n  const dateBuilder = (d) => {\n    let months = ['January', 'February', 'March',\n                  'April', 'May', 'June',\n                  'July', 'August', 'September',\n                  'October', 'November', 'December']\n    let days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday',\n                'Friday', 'Saturday', 'Sunday']\n    let day = days[d.getDay()]\n    let date = d.getDate()\n    let month = months[d.getMonth()]\n    let year = d.getFullYear()\n\n    return `${day} ${date} ${month} ${year}`\n\n   \n  }\n  \n  \n  return (\n    <WeatherStyles>\n     \n        <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'search_box warm' : 'search_box') : 'search_box'}>\n        <input \n        type=\"text\" \n        className=\"search_bar\"\n        placeholder=\"Search...\"\n        onChange={e => setQuery(e.target.value)}\n        value={query}\n        onKeyPress={search}/>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n        <div className=\"location_box\">\n          <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n          <div className=\"date\">{dateBuilder(new Date())}</div>\n        </div>\n        <div className=\"weather_box\">\n          <div className=\"temp\">\n            {Math.round(weather.main.temp)}°c\n          </div>\n          <div className=\"temp_min\"><span>Min: </span>\n            {Math.round(weather.main.temp_min)}\n          </div>\n          <div className=\"temp_max\"><span>Max: </span>\n            {Math.round(weather.main.temp_max)}\n          </div>\n          <div className=\"humidity\"><span>Humidity: </span>{weather.main.humidity}\n          </div>\n          <div className=\"weather\">{weather.weather[0].main}</div>\n          <img src={iconurl} alt=\"\" />\n        </div>\n        </div>\n         ) : ('')}\n        </div>\n     \n    </WeatherStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}